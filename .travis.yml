sudo: true
language: cpp
dist: trusty

matrix:
  include:

  - os: linux
    compiler: clang
    env:
      - COMPILER=clang++-6.0
      - FLAGS="-std=c++14 -stdlib=libstdc++"
      - BUILD_TYPE=Debug
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-6.0
          - sourceline: 'ppa:mhier/libboost-latest'
        packages:
          - libssl-dev
          - boost1.70
          - clang++-6.0
          - g++-8

  - os: linux
    compiler: clang
    env:
      - COMPILER=clang++-6.0
      - FLAGS="-std=c++14 -stdlib=libstdc++"
      - BUILD_TYPE=Release
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-6.0
          - sourceline: 'ppa:mhier/libboost-latest'
        packages:
          - libssl-dev
          - boost1.70
          - clang++-6.0
          - g++-8

  - os: linux
    compiler: clang
    env:
      - COMPILER=clang++-6.0
      - FLAGS="-std=c++17 -stdlib=libstdc++"
      - BUILD_TYPE=Debug
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-6.0
          - sourceline: 'ppa:mhier/libboost-latest'
        packages:
          - libssl-dev
          - boost1.70
          - clang++-6.0
          - g++-8

  - os: linux
    compiler: clang
    env:
      - COMPILER=clang++-6.0
      - FLAGS="-std=c++17 -stdlib=libstdc++"
      - BUILD_TYPE=Release
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-trusty-6.0
          - sourceline: 'ppa:mhier/libboost-latest'
        packages:
          - libssl-dev
          - boost1.70
          - clang++-6.0
          - g++-8

  - os: osx
    osx_image: xcode10
    env:
      - FLAGS="-std=c++14"
      - BUILD_TYPE=Debug

  - os: osx
    osx_image: xcode10
    env:
      - FLAGS="-std=c++14"
      - BUILD_TYPE=Release

  - os: osx
    osx_image: xcode10
    env:
      - FLAGS="-std=c++17"
      - BUILD_TYPE=Debug

  - os: osx
    osx_image: xcode10
    env:
      - FLAGS="-std=c++17"
      - BUILD_TYPE=Release

install:
  - uname -a
  - if [[ "${COMPILER}" != "" ]]; then $COMPILER --version; fi
  - OS=`uname -s`
  - |
     if [[ (-x $(which brew)) ]]; then
       brew update
       brew install boost cmake openssl
       brew upgrade boost
       export OPENSSL_ROOT_DIR="/usr/local/opt/openssl"
       cmake --version
     else
       wget https://cmake.org/files/v3.11/cmake-3.11.4-Linux-x86_64.sh
       chmod +x ./cmake-3.11.4-Linux-x86_64.sh
       sudo ./cmake-3.11.4-Linux-x86_64.sh --prefix=. --exclude-subdir --skip-license
       ./bin/cmake --version
     fi

script:
  - mkdir build && cd build
  - |
     if [[ ($OS == Darwin) ]]; then    ## OS X
       cmake ../BeastHttp/src -DCMAKE_CXX_FLAGS="${FLAGS}" -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
       cmake --build . --target all
       ctest --verbose
     else                              ## Linux
       ../bin/cmake ../BeastHttp/src -DCMAKE_CXX_FLAGS="${FLAGS}" -DCMAKE_CXX_COMPILER=${COMPILER} -DCMAKE_BUILD_TYPE=${BUILD_TYPE}
       ../bin/cmake --build . --target all
       ../bin/ctest --verbose
     fi
